// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/org/jdryad/com/messages/execute-vertex-messages.proto

package org.jdryad.com.messages;

public final class ExecuteVertexMessageHolder {
  private ExecuteVertexMessageHolder() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ExecuteVertexMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use ExecuteVertexMessage.newBuilder() to construct.
    private ExecuteVertexMessage() {
      initFields();
    }
    private ExecuteVertexMessage(boolean noInit) {}
    
    private static final ExecuteVertexMessage defaultInstance;
    public static ExecuteVertexMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExecuteVertexMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jdryad.com.messages.ExecuteVertexMessageHolder.internal_static_org_jdryad_com_messages_ExecuteVertexMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jdryad.com.messages.ExecuteVertexMessageHolder.internal_static_org_jdryad_com_messages_ExecuteVertexMessage_fieldAccessorTable;
    }
    
    public static final class IOKey extends
        com.google.protobuf.GeneratedMessage {
      // Use IOKey.newBuilder() to construct.
      private IOKey() {
        initFields();
      }
      private IOKey(boolean noInit) {}
      
      private static final IOKey defaultInstance;
      public static IOKey getDefaultInstance() {
        return defaultInstance;
      }
      
      public IOKey getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jdryad.com.messages.ExecuteVertexMessageHolder.internal_static_org_jdryad_com_messages_ExecuteVertexMessage_IOKey_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jdryad.com.messages.ExecuteVertexMessageHolder.internal_static_org_jdryad_com_messages_ExecuteVertexMessage_IOKey_fieldAccessorTable;
      }
      
      // required int32 typeId = 1;
      public static final int TYPEID_FIELD_NUMBER = 1;
      private boolean hasTypeId;
      private int typeId_ = 0;
      public boolean hasTypeId() { return hasTypeId; }
      public int getTypeId() { return typeId_; }
      
      // required string ioIdentifier = 2;
      public static final int IOIDENTIFIER_FIELD_NUMBER = 2;
      private boolean hasIoIdentifier;
      private java.lang.String ioIdentifier_ = "";
      public boolean hasIoIdentifier() { return hasIoIdentifier; }
      public java.lang.String getIoIdentifier() { return ioIdentifier_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasTypeId) return false;
        if (!hasIoIdentifier) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasTypeId()) {
          output.writeInt32(1, getTypeId());
        }
        if (hasIoIdentifier()) {
          output.writeString(2, getIoIdentifier());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasTypeId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getTypeId());
        }
        if (hasIoIdentifier()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getIoIdentifier());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey result;
        
        // Construct using org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey();
          return builder;
        }
        
        protected org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.getDescriptor();
        }
        
        public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey getDefaultInstanceForType() {
          return org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey) {
            return mergeFrom((org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey other) {
          if (other == org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.getDefaultInstance()) return this;
          if (other.hasTypeId()) {
            setTypeId(other.getTypeId());
          }
          if (other.hasIoIdentifier()) {
            setIoIdentifier(other.getIoIdentifier());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setTypeId(input.readInt32());
                break;
              }
              case 18: {
                setIoIdentifier(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required int32 typeId = 1;
        public boolean hasTypeId() {
          return result.hasTypeId();
        }
        public int getTypeId() {
          return result.getTypeId();
        }
        public Builder setTypeId(int value) {
          result.hasTypeId = true;
          result.typeId_ = value;
          return this;
        }
        public Builder clearTypeId() {
          result.hasTypeId = false;
          result.typeId_ = 0;
          return this;
        }
        
        // required string ioIdentifier = 2;
        public boolean hasIoIdentifier() {
          return result.hasIoIdentifier();
        }
        public java.lang.String getIoIdentifier() {
          return result.getIoIdentifier();
        }
        public Builder setIoIdentifier(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasIoIdentifier = true;
          result.ioIdentifier_ = value;
          return this;
        }
        public Builder clearIoIdentifier() {
          result.hasIoIdentifier = false;
          result.ioIdentifier_ = getDefaultInstance().getIoIdentifier();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.jdryad.com.messages.ExecuteVertexMessage.IOKey)
      }
      
      static {
        defaultInstance = new IOKey(true);
        org.jdryad.com.messages.ExecuteVertexMessageHolder.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.jdryad.com.messages.ExecuteVertexMessage.IOKey)
    }
    
    // required int32 messageType = 1;
    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private boolean hasMessageType;
    private int messageType_ = 0;
    public boolean hasMessageType() { return hasMessageType; }
    public int getMessageType() { return messageType_; }
    
    // required string udfIdentifier = 2;
    public static final int UDFIDENTIFIER_FIELD_NUMBER = 2;
    private boolean hasUdfIdentifier;
    private java.lang.String udfIdentifier_ = "";
    public boolean hasUdfIdentifier() { return hasUdfIdentifier; }
    public java.lang.String getUdfIdentifier() { return udfIdentifier_; }
    
    // repeated .org.jdryad.com.messages.ExecuteVertexMessage.IOKey inputs = 3;
    public static final int INPUTS_FIELD_NUMBER = 3;
    private java.util.List<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> inputs_ =
      java.util.Collections.emptyList();
    public java.util.List<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> getInputsList() {
      return inputs_;
    }
    public int getInputsCount() { return inputs_.size(); }
    public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey getInputs(int index) {
      return inputs_.get(index);
    }
    
    // repeated .org.jdryad.com.messages.ExecuteVertexMessage.IOKey outputs = 4;
    public static final int OUTPUTS_FIELD_NUMBER = 4;
    private java.util.List<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> outputs_ =
      java.util.Collections.emptyList();
    public java.util.List<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> getOutputsList() {
      return outputs_;
    }
    public int getOutputsCount() { return outputs_.size(); }
    public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey getOutputs(int index) {
      return outputs_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasMessageType) return false;
      if (!hasUdfIdentifier) return false;
      for (org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey element : getInputsList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey element : getOutputsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMessageType()) {
        output.writeInt32(1, getMessageType());
      }
      if (hasUdfIdentifier()) {
        output.writeString(2, getUdfIdentifier());
      }
      for (org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey element : getInputsList()) {
        output.writeMessage(3, element);
      }
      for (org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey element : getOutputsList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMessageType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getMessageType());
      }
      if (hasUdfIdentifier()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUdfIdentifier());
      }
      for (org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey element : getInputsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey element : getOutputsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage result;
      
      // Construct using org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage();
        return builder;
      }
      
      protected org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.getDescriptor();
      }
      
      public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage getDefaultInstanceForType() {
        return org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.inputs_ != java.util.Collections.EMPTY_LIST) {
          result.inputs_ =
            java.util.Collections.unmodifiableList(result.inputs_);
        }
        if (result.outputs_ != java.util.Collections.EMPTY_LIST) {
          result.outputs_ =
            java.util.Collections.unmodifiableList(result.outputs_);
        }
        org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage) {
          return mergeFrom((org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage other) {
        if (other == org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.getDefaultInstance()) return this;
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasUdfIdentifier()) {
          setUdfIdentifier(other.getUdfIdentifier());
        }
        if (!other.inputs_.isEmpty()) {
          if (result.inputs_.isEmpty()) {
            result.inputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
          }
          result.inputs_.addAll(other.inputs_);
        }
        if (!other.outputs_.isEmpty()) {
          if (result.outputs_.isEmpty()) {
            result.outputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
          }
          result.outputs_.addAll(other.outputs_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMessageType(input.readInt32());
              break;
            }
            case 18: {
              setUdfIdentifier(input.readString());
              break;
            }
            case 26: {
              org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.Builder subBuilder = org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInputs(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.Builder subBuilder = org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOutputs(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 messageType = 1;
      public boolean hasMessageType() {
        return result.hasMessageType();
      }
      public int getMessageType() {
        return result.getMessageType();
      }
      public Builder setMessageType(int value) {
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder clearMessageType() {
        result.hasMessageType = false;
        result.messageType_ = 0;
        return this;
      }
      
      // required string udfIdentifier = 2;
      public boolean hasUdfIdentifier() {
        return result.hasUdfIdentifier();
      }
      public java.lang.String getUdfIdentifier() {
        return result.getUdfIdentifier();
      }
      public Builder setUdfIdentifier(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUdfIdentifier = true;
        result.udfIdentifier_ = value;
        return this;
      }
      public Builder clearUdfIdentifier() {
        result.hasUdfIdentifier = false;
        result.udfIdentifier_ = getDefaultInstance().getUdfIdentifier();
        return this;
      }
      
      // repeated .org.jdryad.com.messages.ExecuteVertexMessage.IOKey inputs = 3;
      public java.util.List<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> getInputsList() {
        return java.util.Collections.unmodifiableList(result.inputs_);
      }
      public int getInputsCount() {
        return result.getInputsCount();
      }
      public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey getInputs(int index) {
        return result.getInputs(index);
      }
      public Builder setInputs(int index, org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.inputs_.set(index, value);
        return this;
      }
      public Builder setInputs(int index, org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.Builder builderForValue) {
        result.inputs_.set(index, builderForValue.build());
        return this;
      }
      public Builder addInputs(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.inputs_.isEmpty()) {
          result.inputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
        }
        result.inputs_.add(value);
        return this;
      }
      public Builder addInputs(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.Builder builderForValue) {
        if (result.inputs_.isEmpty()) {
          result.inputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
        }
        result.inputs_.add(builderForValue.build());
        return this;
      }
      public Builder addAllInputs(
          java.lang.Iterable<? extends org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> values) {
        if (result.inputs_.isEmpty()) {
          result.inputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
        }
        super.addAll(values, result.inputs_);
        return this;
      }
      public Builder clearInputs() {
        result.inputs_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .org.jdryad.com.messages.ExecuteVertexMessage.IOKey outputs = 4;
      public java.util.List<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> getOutputsList() {
        return java.util.Collections.unmodifiableList(result.outputs_);
      }
      public int getOutputsCount() {
        return result.getOutputsCount();
      }
      public org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey getOutputs(int index) {
        return result.getOutputs(index);
      }
      public Builder setOutputs(int index, org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.outputs_.set(index, value);
        return this;
      }
      public Builder setOutputs(int index, org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.Builder builderForValue) {
        result.outputs_.set(index, builderForValue.build());
        return this;
      }
      public Builder addOutputs(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.outputs_.isEmpty()) {
          result.outputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
        }
        result.outputs_.add(value);
        return this;
      }
      public Builder addOutputs(org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.Builder builderForValue) {
        if (result.outputs_.isEmpty()) {
          result.outputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
        }
        result.outputs_.add(builderForValue.build());
        return this;
      }
      public Builder addAllOutputs(
          java.lang.Iterable<? extends org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey> values) {
        if (result.outputs_.isEmpty()) {
          result.outputs_ = new java.util.ArrayList<org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey>();
        }
        super.addAll(values, result.outputs_);
        return this;
      }
      public Builder clearOutputs() {
        result.outputs_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.jdryad.com.messages.ExecuteVertexMessage)
    }
    
    static {
      defaultInstance = new ExecuteVertexMessage(true);
      org.jdryad.com.messages.ExecuteVertexMessageHolder.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.jdryad.com.messages.ExecuteVertexMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jdryad_com_messages_ExecuteVertexMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jdryad_com_messages_ExecuteVertexMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jdryad_com_messages_ExecuteVertexMessage_IOKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jdryad_com_messages_ExecuteVertexMessage_IOKey_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9src/org/jdryad/com/messages/execute-ve" +
      "rtex-messages.proto\022\027org.jdryad.com.mess" +
      "ages\"\374\001\n\024ExecuteVertexMessage\022\023\n\013message" +
      "Type\030\001 \002(\005\022\025\n\rudfIdentifier\030\002 \002(\t\022C\n\006inp" +
      "uts\030\003 \003(\01323.org.jdryad.com.messages.Exec" +
      "uteVertexMessage.IOKey\022D\n\007outputs\030\004 \003(\0132" +
      "3.org.jdryad.com.messages.ExecuteVertexM" +
      "essage.IOKey\032-\n\005IOKey\022\016\n\006typeId\030\001 \002(\005\022\024\n" +
      "\014ioIdentifier\030\002 \002(\tB\034B\032ExecuteVertexMess" +
      "ageHolder"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_jdryad_com_messages_ExecuteVertexMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_jdryad_com_messages_ExecuteVertexMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jdryad_com_messages_ExecuteVertexMessage_descriptor,
              new java.lang.String[] { "MessageType", "UdfIdentifier", "Inputs", "Outputs", },
              org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.class,
              org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.Builder.class);
          internal_static_org_jdryad_com_messages_ExecuteVertexMessage_IOKey_descriptor =
            internal_static_org_jdryad_com_messages_ExecuteVertexMessage_descriptor.getNestedTypes().get(0);
          internal_static_org_jdryad_com_messages_ExecuteVertexMessage_IOKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jdryad_com_messages_ExecuteVertexMessage_IOKey_descriptor,
              new java.lang.String[] { "TypeId", "IoIdentifier", },
              org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.class,
              org.jdryad.com.messages.ExecuteVertexMessageHolder.ExecuteVertexMessage.IOKey.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
